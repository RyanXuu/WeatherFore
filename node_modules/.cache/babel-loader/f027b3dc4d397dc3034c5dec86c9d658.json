{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/ryanxu/Documents/Coding/Tutorials/WeatherFore/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Report from './Report';\nimport React, { useState } from 'react';\nimport title from './images/cloudfutures.png';\nconst api = {\n  key: \"24a05065d6a6a1fcdaaa35c2516f9e77\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nconst googleAPI = {\n  key: \"AIzaSyBe8rytPb1dTxpK6YWhrBfnKsdrgYhWxrI\",\n  base: \"https://maps.googleapis.com/maps/api/geocode/\"\n};\n\nconst App = () => {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [newWeather, setnewWeather] = useState({});\n  const [coords, setCoords] = useState({});\n\n  const search = async evt => {\n    if (evt.key === \"Enter\") {\n      const response = await fetch(`${googleAPI.base}json?address=${query.replace(\" \", \"+\")}&key=${googleAPI.key}`);\n      setCoords(response, () => console.log(coords));\n      console.log(coords);\n      await getWeatherData(); // let lon = newWeather.results[0].geometry.location.lng;\n\n      fetch(`${api.base}forecast?q=${query}&units=metric&appid=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n      }); // \n      //   .then(res => res.json())\n      //   .then(result => {\n      //     console.log(result);\n      //   });\n    }\n  };\n\n  const getWeatherData = async () => {\n    const lat = coords;\n    console.log(coords); // results[0].geometry.location.lng;\n\n    const lon = coords; // .results[0].geometry.location.lon;\n\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=current,minutely,hourly,alerts&appid=24a05065d6a6a1fcdaaa35c2516f9e77`);\n    const data = await response.json();\n    setnewWeather(data);\n  };\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  const timeBuilder = d => {\n    let hour = d.getHours();\n    let minute = d.getMinutes();\n    let ampm;\n\n    if (hour === 12) {\n      ampm = \"PM\";\n    } else if (hour === 0) {\n      hour = 12;\n      ampm = \"AM\";\n    } else {\n      ampm = hour > 12 ? \"PM\" : \"AM\";\n\n      if (hour > 12) {\n        hour = hour % 12;\n      }\n    }\n\n    let timeString = minute < 10 ? `Retrieved ${hour}:0${minute} ${ampm}` : `Retrieved ${hour}:${minute} ${ampm}`;\n    return timeString;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search...\",\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), typeof weather.list != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [weather.city.name, \", \", weather.city.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time\",\n            children: timeBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Report, {\n          weatherData: weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"O7NLYdUQ2vdH/WPCxhZrfp47A4w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ryanxu/Documents/Coding/Tutorials/WeatherFore/src/App.js"],"names":["Report","React","useState","title","api","key","base","googleAPI","App","query","setQuery","weather","setWeather","newWeather","setnewWeather","coords","setCoords","search","evt","response","fetch","replace","console","log","getWeatherData","then","res","json","result","lat","lon","data","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","timeBuilder","hour","getHours","minute","getMinutes","ampm","timeString","e","target","value","list","city","name","country","Date"],"mappings":"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","sourcesContent":["import Report from './Report';\nimport React, { useState } from 'react';\nimport title from './images/cloudfutures.png';\n\nconst api = {\n  key: \"24a05065d6a6a1fcdaaa35c2516f9e77\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nconst googleAPI = {\n  key: \"AIzaSyBe8rytPb1dTxpK6YWhrBfnKsdrgYhWxrI\",\n  base: \"https://maps.googleapis.com/maps/api/geocode/\"\n};\n\nconst App = () => {\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [newWeather, setnewWeather] = useState({});\n  const [coords, setCoords] = useState({});\n\n  const search = async (evt) => {\n\n    if (evt.key === \"Enter\") {\n      const response = await fetch(`${googleAPI.base}json?address=${query.replace(\" \", \"+\")}&key=${googleAPI.key}`);\n      setCoords((response), () => console.log(coords));\n      console.log(coords)\n      await getWeatherData();\n\n      // let lon = newWeather.results[0].geometry.location.lng;\n      \n      fetch(`${api.base}forecast?q=${query}&units=metric&appid=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n\n      // \n      //   .then(res => res.json())\n      //   .then(result => {\n      //     console.log(result);\n      //   });\n    }\n  }\n\n\n  const getWeatherData = async () => {\n    const lat = coords\n    console.log(coords);\n    // results[0].geometry.location.lng;\n    const lon = coords\n    // .results[0].geometry.location.lon;\n    const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=current,minutely,hourly,alerts&appid=24a05065d6a6a1fcdaaa35c2516f9e77`);\n    const data = await response.json();\n    setnewWeather(data);\n  }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  const timeBuilder = (d) => {\n    let hour = d.getHours();\n    let minute = d.getMinutes();\n\n    let ampm;\n    if (hour === 12) {\n      ampm = \"PM\";\n    }\n    else if (hour === 0) {\n      hour = 12;\n      ampm = \"AM\";\n    }\n    else {\n      ampm = hour > 12 ? \"PM\" : \"AM\";\n      if (hour > 12) {\n        hour = hour % 12;\n      }\n    }\n\n    let timeString = minute < 10 ?\n      `Retrieved ${hour}:0${minute} ${ampm}`\n      : `Retrieved ${hour}:${minute} ${ampm}`;\n\n    return timeString;\n  }\n\n  return (\n    <div className=\"app\">\n      <main>\n\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n        <div className=\"title\">\n          <img src={title} />\n        </div>\n\n        {(typeof weather.list != \"undefined\") ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location\">{weather.city.name}, {weather.city.country}</div>\n              <div className=\"date\">{dateBuilder(new Date())}</div>\n              <div className=\"time\">{timeBuilder(new Date())}</div>\n            </div>\n\n            <Report weatherData={weather} />\n\n          </div>\n        ) : ('')}\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}